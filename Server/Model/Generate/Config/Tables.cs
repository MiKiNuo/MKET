//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;


namespace ET
{
   
public partial class Tables
{
    public AIConfigCategory AIConfigCategory {get; }
    public StartMachineConfigCategory StartMachineConfigCategory {get; }
    public StartProcessConfigCategory StartProcessConfigCategory {get; }
    public StartSceneConfigCategory StartSceneConfigCategory {get; }
    public StartZoneConfigCategory StartZoneConfigCategory {get; }
    public UnitConfigCategory UnitConfigCategory {get; }

    public Tables(System.Func<string, ByteBuf> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        AIConfigCategory = new AIConfigCategory(loader("aiconfigcategory")); 
        tables.Add("AIConfigCategory", AIConfigCategory);
        StartMachineConfigCategory = new StartMachineConfigCategory(loader("startmachineconfigcategory")); 
        tables.Add("StartMachineConfigCategory", StartMachineConfigCategory);
        StartProcessConfigCategory = new StartProcessConfigCategory(loader("startprocessconfigcategory")); 
        tables.Add("StartProcessConfigCategory", StartProcessConfigCategory);
        StartSceneConfigCategory = new StartSceneConfigCategory(loader("startsceneconfigcategory")); 
        tables.Add("StartSceneConfigCategory", StartSceneConfigCategory);
        StartZoneConfigCategory = new StartZoneConfigCategory(loader("startzoneconfigcategory")); 
        tables.Add("StartZoneConfigCategory", StartZoneConfigCategory);
        UnitConfigCategory = new UnitConfigCategory(loader("unitconfigcategory")); 
        tables.Add("UnitConfigCategory", UnitConfigCategory);

        PostInit();
        AIConfigCategory.Resolve(tables); 
        StartMachineConfigCategory.Resolve(tables); 
        StartProcessConfigCategory.Resolve(tables); 
        StartSceneConfigCategory.Resolve(tables); 
        StartZoneConfigCategory.Resolve(tables); 
        UnitConfigCategory.Resolve(tables); 
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        AIConfigCategory.TranslateText(translator); 
        StartMachineConfigCategory.TranslateText(translator); 
        StartProcessConfigCategory.TranslateText(translator); 
        StartSceneConfigCategory.TranslateText(translator); 
        StartZoneConfigCategory.TranslateText(translator); 
        UnitConfigCategory.TranslateText(translator); 
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}